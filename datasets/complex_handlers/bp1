(* Add *)
v0 + v1 + (-(((v2 - (v0 * v0))) - (v0 * v1)))
(((v2 - (v0 * v0))) - (v0 * v1)) + (-((v1 - (v2 & v0)) * (v1 ^ v0)))
(v1 - (v2 & v0)) * (v1 ^ v0)

(* Sub*)
v0 - v1 + (-((v0*v2) - (v1 | v2)))
((v0*v2) - (v1 | v2)) + (-((((v1 & v2) + v0) ^ v1) * v0))
(((v1 & v2) + v0) ^ v1) * v0

(* Mul *)
v0 * v1 + (-((v0*v2*v2) - (v0*v1)))
((v0*v2*v2) - (v0*v1)) + (-((v1 ^ v0) - (v2*(v1+v0))))
((v1 ^ v0) - (v2*(v1+v0)))

(* And *)
(v0 & v1) ^ ((v0 & v2)*(v0 & v2) | v1)
((v0 & v2)*(v0 & v2) | v1) ^ ((v2 * v1) - ((v0 ^ v2) + v1))
(v2 * v1) - ((v0 ^ v2) + v1)

(* Or *)
(v0 | v1) + (- (((v1*v2) + (v0)) * ((v1*v2) + (v0)) ))
(((v1*v2) + (v0)) * ((v1*v2) + (v0))) + (-((v2 * v0) ^ (v1 - (v0 & v2 ))))
((v2 * v0) ^ (v1 - (v0 & v2 )))
